{{- $fullimage := .Image -}}
{{- $pkg := "falcon-sensor.rpm" -}}
{{- if or (eq .Name "ubuntu") (eq .Name "debian") -}}
{{- $pkg = "falcon-sensor.deb" -}}
{{- end -}}
{{- $fromimage := $fullimage -}}
{{- if .Tag -}}
{{- $fromimage = (printf "%s:%s" $fullimage .Tag) -}}
{{- end -}}
### WARNING: This file is AUTOGENERATED. See containerfile.template to make changes for GitHub Pull Requests

{{- if contains "ubi" $fullimage -}}
#
# RHEL Universal Base Image (RHEL UBI) is a stripped down, OCI-compliant,
# base operating system image purpose built for containers. For more information
# see https://developers.redhat.com/products/rhel/ubi
#
{{- end }}
FROM {{ $fromimage }}

USER root

ARG VERSION

# VCS_REF=$(git rev-parse --short HEAD)
ARG VCS_REF
ARG FALCON_PKG

#
# Friendly reminder that generated container images are from an open source
# project, and not a formal CrowdStrike product.
#
### Required OpenShift Labels
LABEL name="CrowdStrike Falcon Sensor" \
    maintainer="integrations@crowdstrike.com" \
    vendor="CrowdStrike Community" \
    version=$VERSION \
    release=$VCS_REF \
    summary="CrowdStrike Falcon Sensor" \
    description="The falcon-sensor package provides the Crowdstrike Falcon Sensor daemon and kernel modules." \
    org.opencontainers.image.authors="CrowdStrike Solutions Architects <integrations@crowdstrike.com>" \
    org.opencontainers.image.vendor="CrowdStrike" \
    org.opencontainers.image.title="CrowdStrike's Falcon Sensor for Linux" \
    org.opencontainers.image.description="Containerize the Falcon Sensor for Linux" \
    org.opencontainers.image.documentation="The falcon-sensor package provides the Crowdstrike Falcon Sensor daemon and kernel modules" \
    org.opencontainers.image.version=$VERSION \
    org.opencontainers.image.release=$VCS_REF

### add licenses to this directory
COPY licenses /licenses

### Copy {{ $pkg }} into container
COPY $FALCON_PKG {{ $pkg }}

{{ if or (contains "amazonlinux" $fullimage) (contains "oraclelinux" $fullimage) (contains "rhel" $fullimage) (eq "ubi" .Name) -}}
RUN yum -y update && \
    yum -y install \
    {{- if (eq "ubi" .Name) }}
--disablerepo=* \
    --enablerepo=ubi-8-appstream \
    --enablerepo=ubi-8-baseos \
    {{- end }}
libnl3 net-tools zip openssl hostname iproute ./{{ $pkg }} && \
    yum -y clean all && rm -rf /var/cache/yum && \
    rm -f {{ $pkg }}
{{- end }}
{{- if contains "ubi-minimal" .Name -}}
RUN REPOLIST="ubi-8-baseos" \
    INSTALL_PKGS="libnl3 net-tools zip openssl hostname iproute procps" && \
    microdnf -y update --disablerepo "*" --enablerepo ubi-8-baseos --setopt=tsflags=nodocs && \
    microdnf -y install --disablerepo "*" --enablerepo ${REPOLIST} --setopt=tsflags=nodocs ${INSTALL_PKGS} && \
    rpm -ivh {{ $pkg }} && \
    microdnf clean all && rm -rf /var/cache/yum && \
    rm -f {{ $pkg }}
{{- end }}
{{- if or (contains "suse" $fullimage) (contains "sles" $fullimage) -}}
COPY ./falcon-sensor.gpg /

RUN rpm --import ./falcon-sensor.gpg && \
    zypper --gpg-auto-import-keys --non-interactive install \
    libnl3-200 net-tools zip openssl hostname iproute ./{{ $pkg }} && \
    zypper clean -a && \
    rm -f {{ $pkg }} ./falcon-sensor.gpg
{{- end }}
{{- if or (contains "ubuntu" $fullimage) (contains "debian" $fullimage) -}}
RUN apt-get -y update && \
    apt-get -y install \
    libnl-3-200 net-tools zip openssl hostname iproute2 ./{{ $pkg }} && \
    rm -rf {{ $pkg }} /var/lib/apt/lists/* && \
    apt clean
{{- end }}

#
# Copy the entrypoint script into the container and make sure
# that its executable. Add the symlink for backwards compatability
#
COPY entrypoint.sh /

ENV PATH ".:/bin:/usr/bin:/sbin:/usr/sbin"
WORKDIR /opt/CrowdStrike

VOLUME /var/log
ENTRYPOINT ["/entrypoint.sh"]
